const CancelSubscription = {"metadata":{"allOf":[{"type":"object","properties":{"subscriptionID":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The unique identifier of the subscription to be canceled."}},"required":["subscriptionID"]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"cancel_at_period_end":{"description":"Indicates whether the subscription will be canceled at the end of the current period.","type":"boolean","examples":[false]},"created_at":{"description":"The timestamp indicating when the subscription was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"currency":{"description":"The currency of the subscription.","type":"string","examples":["USD"]},"customer":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the customer was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"deleted_at":{"description":"The timestamp indicating when the customer was deleted, if applicable.","type":"string","examples":["2023-01-05T10:00:00Z"]},"email":{"description":"The email address of the customer.","type":"string","examples":["customer@example.com"]},"id":{"description":"The unique identifier of the customer.","type":"string","examples":["customer123"]},"metadata":{"type":"object","additionalProperties":true},"name":{"description":"The name of the customer.","type":"string","examples":["John Doe"]},"org_id":{"description":"The identifier representing the organization associated with the customer.","type":"string","examples":["org123"]},"phone":{"description":"The phone number of the customer.","type":"string","examples":[1234567890]},"properties":{"description":"Additional properties associated with the customer.","type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the customer.","type":"string","examples":["REF-123456"]},"updated_at":{"description":"The timestamp indicating when the customer was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{},"wallet_address":{"description":"The wallet address associated with the customer.","type":"string","examples":[4.059726770363619e+44]}}},"customer_id":{"description":"The unique identifier of the customer associated with the subscription.","type":"string","examples":["customer123"]},"id":{"description":"The unique identifier of the subscription.","type":"string","examples":["sub123"]},"items":{"type":"array","description":"List of subscription items included in the subscription.","items":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the subscription item was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"id":{"description":"The unique identifier of the subscription item.","type":"string","examples":["item123"]},"plan_id":{"description":"The unique identifier of the plan associated with the subscription item.","type":"string","examples":["plan456"]},"properties":{"type":"object","additionalProperties":true},"subscription_id":{"description":"The unique identifier of the subscription associated with the subscription item.","type":"string","examples":["sub123"]},"updated_at":{"description":"The timestamp indicating when the subscription item was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]}}}},"metadata":{"description":"Additional metadata associated with the subscription.","type":"array","items":{"type":"integer"}},"org_id":{"description":"The identifier representing the organization associated with the subscription.","type":"string","examples":["org123"]},"payment_method":{"description":"payment_method\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"properties":{"type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the subscription.","type":"string","examples":["REF-123456"]},"source":{"description":"The source of the subscription.\n\n`1` `2` `3` `4`","type":"integer","enum":[1,2,3,4],"x-enum-varnames":["BillingSourceLago","BillingSourceBoomfi","BillingSourceStripe","BillingSourceChargebee"]},"start_at":{"description":"The timestamp indicating when the subscription starts.","type":"string","examples":["2023-01-05T10:00:00Z"]},"status":{"description":"The status of the subscription.\n\n`1` `2` `3` `4` `5` `6` `7` `8`","type":"integer","enum":[1,2,3,4,5,6,7,8],"x-enum-varnames":["SubscriptionStatusUnknown","SubscriptionStatusPending","SubscriptionStatusFuture","SubscriptionStatusIntrial","SubscriptionStatusActive","SubscriptionStatusPaused","SubscriptionStatusExpired","SubscriptionStatusCanceled"]},"updated_at":{"description":"The timestamp indicating when the subscription was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{"description":"v1","type":"array","items":{"type":"integer"}}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateCustomer = {"body":{"type":"object","required":["email"],"properties":{"customer_ident":{"type":"string","description":"Unique identifier for a customer."},"discord":{"type":"string","description":"Discord username or identifier associated with a customer, allowing for communication and linkage to Discord-based interactions."},"email":{"type":"string","description":"Customer's email address."},"name":{"type":"string","description":"Customer's name."},"number":{"type":"string","description":"Numeric identifier or contact number associated with the customer."},"twitter":{"type":"string","description":"Twitter handle associated with the customer."},"wallet_address":{"type":"string","description":"Unique address associated with a customer's wallet."}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","properties":{"created_at":{"type":"string","description":"The timestamp indicating when the customer record was created.","examples":["2023-03-15T08:30:00Z"]},"customer_ident":{"type":"string","description":"The unique identifier for the customer.","examples":["CUST123"]},"email":{"type":"string","description":"The email address associated with the customer.","examples":["example@email.com"]},"guest":{"type":"boolean","description":"Indicates whether the customer is a guest (true) or not (false).","examples":[false]},"id":{"type":"string","description":"The unique identifier for the customer.","examples":["123456789"]},"is_deleted":{"type":"boolean","description":"Indicates whether the customer has been deleted (true) or not (false).","examples":[false]},"last_payment_date":{"type":"string","description":"The timestamp indicating the date of the last payment made by the customer.","examples":["2023-03-20T12:00:00Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the customer.","additionalProperties":true},"name":{"type":"string","description":"The name of the customer.","examples":["John Doe"]},"organisation_id":{"type":"string","description":"The identifier of the organization to which the customer belongs.","examples":["ORG123"]},"payments_count":{"type":"integer","description":"The total count of payments made by the customer.","examples":[5]},"phone":{"type":"string","description":"The phone number associated with the customer.","examples":[1234567890]},"properties":{"type":"object","description":"Additional custom properties associated with the customer.","additionalProperties":true},"updated_at":{"type":"string","description":"The timestamp indicating when the customer record was last updated.","examples":["2023-03-25T10:45:00Z"]},"wallet_address":{"type":"string","description":"The wallet address associated with the customer for cryptocurrency transactions.","examples":["0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreatePaymentLink = {"body":{"required":["name","amount","currency"],"type":"object","properties":{"account_ids":{"items":{"type":"integer"},"type":"array","description":"A list of account IDs to associate with the payment link. Use this to attach specific accounts to the payment link, making it account-specific.\n<small>⚠️ Either `account_ids` or `account_ref` should be used, not both. ⚠️</small>\n"},"account_ref":{"type":"string","description":"An account reference to associate with the payment link. Use this to attach accounts with the specified account reference to the payment link, making it account-specific. \n<small>⚠️ Either `account_ids` or `account_ref` should be used, not both. ⚠️</small>\n"},"name":{"type":"string","description":"The name of the payment link.","examples":["New Paylink"]},"amount":{"type":"string","description":"The amount associated with the payment link.","examples":["1000"]},"currency":{"type":"string","description":"The currency of the payment link.","examples":["USD"]},"reference":{"type":"string","description":"The reference for the payment link."},"description":{"type":"string","description":"A description of the payment link."},"interval":{"type":"string","description":"The recurring interval for the payment link:\n- **Week**\n- **Month**\n- **Year**\n","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"intervalCount":{"type":"integer","description":"The number of intervals for the recurring payment link.","examples":[1]},"trial_period":{"type":"string","description":"The trial period for the payment link in a valid duration format. For example, for 1 day use 24h.","examples":["24h"]},"image_url":{"type":"string","description":"An image URL to be used as the cover image for the payment link at the checkout."},"metadata":{"type":"object","properties":{"payment_method_types":{"type":"array","items":{"type":"string","enum":["MerchantContract","ProxyWallet","Card"]},"description":"Specifies the payment methods available at checkout. By default, the system applies payment methods based on the merchant’s settlement account settings. If `Card` is included, the card payment option appears only if the merchant has a Card settlement account configured.\n\nAccepts an array with any or all of these values: \n- **MerchantContract**\n- **ProxyWallet**\n- **Card** \n"},"after_completion":{"type":"object","description":"Defines post-checkout behavior. The configuration allows either a custom success message or a redirect to a specified URL upon payment completion.","properties":{"type":{"type":"string","enum":["hosted","redirect"],"description":"Sets the post-checkout behavior:\n- **hosted**: Displays a success message, customizable with `custom_message`. \n- **redirect**: Sends the user to a specified URL via `redirect_url`.\n"},"custom_message":{"type":"string","description":"A custom success message shown after payment completion if `type` is set to `hosted`. If not provided, a default success message will be displayed."},"redirect_url":{"type":"string","format":"uri","description":"URL to which the user is redirected after successful payment if `type` is set to `redirect`. A valid URL is required for this type."}}},"omit_possible_duplicate_acknowledgement":{"type":"boolean","description":"Determines if users should be notified when attempting multiple one-time payments. \n- **true**: A prompt will notify users of prior payments to the link, but they can proceed with an additional payment.\n- **false**: No prompt will be shown for repeated payments.\n"}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreatePlan = {"body":{"type":"object","properties":{"amount":{"type":"string","description":"The amount associated with the plan, specified as a string. This parameter represents the cost or price of the plan."},"currency":{"type":"string","description":"The currency in which the plan amount is expressed."},"description":{"type":"string","description":"A brief description or summary of the plan. This parameter provides additional information about the purpose or features of the plan."},"interval":{"type":"string","description":"The recurring interval for the payment link:\n- **Week**\n- **Month**\n- **Year**\n","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"intervalCount":{"type":"integer","description":"The number of intervals between each billing cycle. This parameter determines how often the plan is billed within the specified interval."},"metadata":{"type":"object","description":"An object containing additional metadata associated with the plan.","additionalProperties":true},"name":{"type":"string","description":"A name or label associated with the plan. This parameter represents a identifier or title for the plan."},"reference":{"type":"string","description":"A reference identifier associated with the plan. This parameter allows for linking the plan to external identifiers."},"trial_period":{"type":"string","description":"Specifies the trial period duration for the plan, if applicable. This parameter represents the duration of any trial period associated with the plan."}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier of the plan.","examples":["2eJh1L1rDrCZxTyE6vwGhck7LWI"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the plan.","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan."},"name":{"type":"string","description":"The name of the plan.\n\n`1` `2` `3`","enum":["1","2","3"],"x-enum-varnames":["PlanTypeUnknown","PlanTypeOnetime","PlanTypeRecurring"]},"type":{"type":"string","description":"The type of the plan."},"billing_scheme":{"type":"string","description":"The billing scheme of the plan."},"price":{"type":"string","description":"The price of the plan."},"currency":{"type":"string","description":"The currency of the plan."},"available_quantity":{"type":"integer","description":"The available quantity of the plan."},"trial_period":{"type":"string","description":"The trial period of the plan."},"recurring_interval":{"type":"string","description":"The recurring interval of the plan.\n\n`Week` `Month` `Year`","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"recurring_interval_count":{"type":"integer","description":"The count of recurring intervals for the plan."},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan."},"reference":{"type":"string","description":"The reference of the plan."},"enabled":{"type":"boolean","description":"Indicates whether the plan is enabled or not."},"v1":{"type":"string","description":"Additional information about the plan."},"created_by":{"type":"string","description":"The identifier of the user who created the plan."},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created."},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted, if applicable."},"metadata":{"type":"object","description":"Additional metadata associated with the plan.","additionalProperties":true},"properties":{"type":"object","description":"Additional properties of the plan.","additionalProperties":true}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateVariantPaylinkUrl = {"metadata":{"allOf":[{"type":"object","properties":{"paylinkId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique identifier of the payment link."}},"required":["paylinkId"]},{"type":"object","properties":{"amount":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Amount to be associated with the payment link variant."},"currency":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Currency to be associated with the payment link variant."},"customer_ident":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Customer identifier to record as `customer.reference`."},"redirect_to":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"URL to redirect customer after a successful payment."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"url":{"type":"string","description":"The URL of the paylink variant","examples":["https://pay-test.boomfi.xyz/2Z4zsnmp37AF3WKM6N2j4wmeakr?amount=101&currency=EUR&signature=7a3043f809aa4aab4ca68694f9394c6fe4deb82c745347a4fc4ae33f6716c22e"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink variant","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"payment_link":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}},"plan":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier of the plan.","examples":["2eJh1L1rDrCZxTyE6vwGhck7LWI"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the plan.","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan."},"name":{"type":"string","description":"The name of the plan.\n\n`1` `2` `3`","enum":["1","2","3"],"x-enum-varnames":["PlanTypeUnknown","PlanTypeOnetime","PlanTypeRecurring"]},"type":{"type":"string","description":"The type of the plan."},"billing_scheme":{"type":"string","description":"The billing scheme of the plan."},"price":{"type":"string","description":"The price of the plan."},"currency":{"type":"string","description":"The currency of the plan."},"available_quantity":{"type":"integer","description":"The available quantity of the plan."},"trial_period":{"type":"string","description":"The trial period of the plan."},"recurring_interval":{"type":"string","description":"The recurring interval of the plan.\n\n`Week` `Month` `Year`","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"recurring_interval_count":{"type":"integer","description":"The count of recurring intervals for the plan."},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan."},"reference":{"type":"string","description":"The reference of the plan."},"enabled":{"type":"boolean","description":"Indicates whether the plan is enabled or not."},"v1":{"type":"string","description":"Additional information about the plan."},"created_by":{"type":"string","description":"The identifier of the user who created the plan."},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created."},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted, if applicable."},"metadata":{"type":"object","description":"Additional metadata associated with the plan.","additionalProperties":true},"properties":{"type":"object","description":"Additional properties of the plan.","additionalProperties":true}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"403":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const CreateWebhook = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the integration to bea associated to the new webhook."},"orgID":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The unique identifier of your organization in BoomFi."}},"required":["name","orgID"]}]},"response":{"200":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DeleteCustomer = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique identifier of the customer."}},"required":["customerID"]}]},"response":{"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const DisableIntegration = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the integration to be disabled."}},"required":["name"]}]},"response":{"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const EnableDisablePaylink = {"body":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Set to `false` to disable the paylink or `true` to enable it."}},"required":["enabled"],"$schema":"http://json-schema.org/draft-04/schema#"},"metadata":{"allOf":[{"type":"object","properties":{"paylinkId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The unique identifier of the paylink to update."}},"required":["paylinkId"]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const EnableIntegration = {"metadata":{"allOf":[{"type":"object","properties":{"name":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The name of the integration to be enabled."}},"required":["name"]}]},"response":{"200":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetCustomerById = {"metadata":{"allOf":[{"type":"object","properties":{"customerID":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique identifier of the customer. Supports either BoomFi's Customer ID or the unique reference identifier set in a paylink for the customer."}},"required":["customerID"]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"created_at":{"type":"string","description":"The timestamp indicating when the customer record was created.","examples":["2023-03-15T08:30:00Z"]},"customer_ident":{"type":"string","description":"The unique identifier for the customer.","examples":["CUST123"]},"email":{"type":"string","description":"The email address associated with the customer.","examples":["example@email.com"]},"guest":{"type":"boolean","description":"Indicates whether the customer is a guest (true) or not (false).","examples":[false]},"id":{"type":"string","description":"The unique identifier for the customer.","examples":["123456789"]},"is_deleted":{"type":"boolean","description":"Indicates whether the customer has been deleted (true) or not (false).","examples":[false]},"last_payment_date":{"type":"string","description":"The timestamp indicating the date of the last payment made by the customer.","examples":["2023-03-20T12:00:00Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the customer.","additionalProperties":true},"name":{"type":"string","description":"The name of the customer.","examples":["John Doe"]},"organisation_id":{"type":"string","description":"The identifier of the organization to which the customer belongs.","examples":["ORG123"]},"payments_count":{"type":"integer","description":"The total count of payments made by the customer.","examples":[5]},"phone":{"type":"string","description":"The phone number associated with the customer.","examples":[1234567890]},"properties":{"type":"object","description":"Additional custom properties associated with the customer.","additionalProperties":true},"updated_at":{"type":"string","description":"The timestamp indicating when the customer record was last updated.","examples":["2023-03-25T10:45:00Z"]},"wallet_address":{"type":"string","description":"The wallet address associated with the customer for cryptocurrency transactions.","examples":["0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520"]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetIntegrationTemplates = {"response":{"200":{"type":"array","items":{"type":"object","properties":{"created_at":{"type":"string","description":"The timestamp indicating when the integration was created.","examples":["2023-01-01T12:00:00Z"]},"created_by":{"type":"string","description":"The user or entity that created the integration.","examples":["user123"]},"description":{"type":"string","description":"The description of the integration.","examples":["Integration for data synchronization"]},"enabled":{"type":"boolean","description":"Indicates whether the integration is enabled.","examples":[true]},"id":{"type":"integer","description":"The unique identifier of the integration.","examples":[123456]},"last_error":{"type":"string","description":"The last error message encountered during synchronization.","examples":["Connection timeout"]},"last_sync_time":{"type":"string","description":"The timestamp indicating when the last synchronization occurred.","examples":["2023-01-02T08:30:00Z"]},"name":{"type":"string","description":"The name of the integration.","examples":["Data Sync"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the integration.","examples":["org123"]},"properties":{"type":"object","additionalProperties":true,"description":"Additional properties associated with the integration."},"schema":{"type":"object","additionalProperties":true,"description":"The schema of the integration."},"status":{"description":"The current status of the organization integration:\n- 1 = Unknown\n- 2 = Updating\n- 3 = Ready\n- 4 = Disabling\n- 5 = Disabled\n\n`1` `2` `3` `4` `5`","type":"integer","enum":[1,2,3,4,5],"x-enum-varnames":["OrgIntegrationStatusUnknown","OrgIntegrationStatusUpdating","OrgIntegrationStatusReady","OrgIntegrationStatusDisabling","OrgIntegrationStatusDisabled"]},"template_name":{"type":"string","description":"The template name of the integration.","examples":["Data Sync Template"]},"type":{"description":"The type of the integration.\n\n`1` `2` `3` `4` `5`","type":"integer","enum":[1,2,3,4,5],"x-enum-varnames":["OrgIntegrationTypeUnknown","OrgIntegrationTypeBilling","OrgIntegrationTypeEcommerce","OrgIntegrationTypeAccounting","OrgIntegrationTypeWorkflow"]},"updated_at":{"type":"string","description":"The timestamp indicating when the integration was last updated.","examples":["2023-01-03T10:45:00Z"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetIntegrations = {"response":{"200":{"type":"array","items":{"type":"object","properties":{"created_at":{"type":"string","description":"The timestamp indicating when the integration was created.","examples":["2023-01-01T12:00:00Z"]},"created_by":{"type":"string","description":"The user or entity that created the integration.","examples":["user123"]},"description":{"type":"string","description":"The description of the integration.","examples":["Integration for data synchronization"]},"enabled":{"type":"boolean","description":"Indicates whether the integration is enabled.","examples":[true]},"id":{"type":"integer","description":"The unique identifier of the integration.","examples":[123456]},"last_error":{"type":"string","description":"The last error message encountered during synchronization.","examples":["Connection timeout"]},"last_sync_time":{"type":"string","description":"The timestamp indicating when the last synchronization occurred.","examples":["2023-01-02T08:30:00Z"]},"name":{"type":"string","description":"The name of the integration.","examples":["Data Sync"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the integration.","examples":["org123"]},"properties":{"type":"object","additionalProperties":true,"description":"Additional properties associated with the integration."},"schema":{"type":"object","additionalProperties":true,"description":"The schema of the integration."},"status":{"description":"The current status of the organization integration:\n- 1 = Unknown\n- 2 = Updating\n- 3 = Ready\n- 4 = Disabling\n- 5 = Disabled\n\n`1` `2` `3` `4` `5`","type":"integer","enum":[1,2,3,4,5],"x-enum-varnames":["OrgIntegrationStatusUnknown","OrgIntegrationStatusUpdating","OrgIntegrationStatusReady","OrgIntegrationStatusDisabling","OrgIntegrationStatusDisabled"]},"template_name":{"type":"string","description":"The template name of the integration.","examples":["Data Sync Template"]},"type":{"description":"The type of the integration.\n\n`1` `2` `3` `4` `5`","type":"integer","enum":[1,2,3,4,5],"x-enum-varnames":["OrgIntegrationTypeUnknown","OrgIntegrationTypeBilling","OrgIntegrationTypeEcommerce","OrgIntegrationTypeAccounting","OrgIntegrationTypeWorkflow"]},"updated_at":{"type":"string","description":"The timestamp indicating when the integration was last updated.","examples":["2023-01-03T10:45:00Z"]}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetOrganization = {"response":{"200":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for BoomFi","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"name":{"type":"string","description":"The name of the BoomFi service","examples":["BoomFi"]},"owner_user_id":{"type":"string","description":"The user ID of the owner","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"webhook_url":{"type":"string","format":"uri","description":"The URL for webhook notifications","examples":["https://webhook.site/b09eec23-3f7a-4f0c-aec6-84c277c5eb78"]},"logo_url":{"type":"string","format":"uri","description":"The URL for the logo of BoomFi","examples":["https://boomfi-test-addonsstack-ipj55n-merchantdatabucket-11rcw286tjikp.s3.eu-west-2.amazonaws.com/7403e69d-71c7-4ab4-8b19-7130ecd0bb3e/merchant-logos/57da50bd-857a-4658-8916-7f4a5f9ad9ad.png"]},"offramp_fee_pct":{"type":"number","description":"The offramp fee percentage","examples":[1]},"payment_fee_pct":{"type":"number","description":"The payment fee percentage","examples":[1]},"swap_fee_pct":{"type":"number","description":"The swap fee percentage","examples":[1]},"credits_usd":{"type":"number","description":"The credits in USD","examples":[0]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when BoomFi was created","examples":["2023-08-11T10:09:25.679Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when BoomFi was last updated","examples":["2024-03-29T13:59:55.003Z"]},"properties":{"type":"object","properties":{"ramp":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Indicates if Ramp is enabled","examples":[true]}}},"spreedly":{"type":"object","properties":{"merchant_profile_id":{"type":"string","description":"The merchant profile ID for Spreedly","examples":["65oxw5ZZ2lE4siMz618v4HQqD2X"]},"sca_authentication_enabled":{"type":"boolean","description":"Indicates if SCA authentication is enabled","examples":[true]},"sca_provider_id":{"type":"string","description":"The SCA provider ID for Spreedly","examples":["YN8LHxRK9ysWlKfdWZdDCtUM2TI"]},"sub_merchant_data":{"type":"string","description":"Sub-merchant data for Spreedly","examples":["eyJ0b2tlbiI6Ik5zVkUyV1E0eWZmUklBaDRSMENzalRXYU5naSIsIm5hbWUiOiJDcmV3IiwiZW52aXJvbm1lbnRfa2V5IjoiM0I1TkFGWTlBTTkyODlGWDZROTVOM1g4RFciLCJtZXJjaGFudF9kZWZpbmVkX3VpZCI6IjJUcG1ubWg2R0hKWHVtS04xb0J5MnU1NkltYSIsImFkZHJlc3MiOnsiYWRkcmVzczEiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIiLCJ6aXAiOiIiLCJjb3VudHJ5IjoiIn0sIm1ldGFkYXRhIjpudWxsLCJjcmVhdGVkX2F0IjoiMjAyNC0wMi0xNlQxNDo0OToyM1oiLCJ1cGRhdGVkX2F0IjoiMjAyNC0wMi0xNlQxNDo0OToyM1oifQ=="]},"sub_merchant_id":{"type":"string","description":"The sub-merchant ID for Spreedly","examples":["NsVE2WQ4yffRIAh4R0CsjTWaNgi"]}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPaymentById = {"metadata":{"allOf":[{"type":"object","properties":{"paymentId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Unique identifier of a payment in the system."}},"required":["paymentId"]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"amount":{"description":"The amount associated with the payment.","type":"string","examples":["100.00"]},"created_at":{"description":"The timestamp indicating when the payment was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"crypto_transaction":{"type":"object","properties":{"chain_id":{"description":"The unique identifier representing a blockchain network or chain.","type":"integer","examples":[1]},"created_at":{"description":"The timestamp indicating when the crypto transaction was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"id":{"description":"The unique identifier of the crypto transaction.","type":"integer"},"payment_id":{"description":"The ID of the payment associated with the crypto transaction.","type":"object","properties":{"string":{"type":"string"},"valid":{"description":"Valid is true if String is not NULL","type":"boolean"}}},"raw":{"description":"Additional raw data associated with the crypto transaction.","type":"array","items":{"type":"integer"}},"sequence":{"description":"The sequence number of the crypto transaction.","type":"string","examples":["123456789"]},"source":{"description":"Details of the source of the crypto transaction.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"status":{"description":"The status of the crypto transaction.\n\n`1` `2` `3`","type":"integer","enum":[1,2,3],"x-enum-varnames":["TransactionStatusPending","TransactionStatusSuccess","TransactionStatusFailed"]},"transaction_hash":{"description":"The transaction hash of the crypto transaction.","type":"string","examples":["0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"]},"type":{"description":"The type of the crypto transaction.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10],"x-enum-varnames":["TransactionTypeUnknown","TransactionTypeApproval","TransactionTypeDeposit","TransactionTypeWithdraw","TransactionTypePayment","TransactionTypeRefund","TransactionTypeSubscribe","TransactionTypeUnsubscribe","TransactionTypeInternal","TransactionTypeSwap"]},"updated_at":{"description":"The timestamp indicating when the crypto transaction was last updated.","type":"string","examples":["2023-01-01T12:30:00Z"]}}},"currency":{"description":"The currency of the payment.","type":"string","examples":["USD"]},"customer":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the customer was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"deleted_at":{"description":"The timestamp indicating when the customer was deleted, if applicable.","type":"string","examples":["2023-01-05T10:00:00Z"]},"email":{"description":"The email address of the customer.","type":"string","examples":["customer@example.com"]},"id":{"description":"The unique identifier of the customer.","type":"string","examples":["customer123"]},"metadata":{"type":"object","additionalProperties":true},"name":{"description":"The name of the customer.","type":"string","examples":["John Doe"]},"org_id":{"description":"The identifier representing the organization associated with the customer.","type":"string","examples":["org123"]},"phone":{"description":"The phone number of the customer.","type":"string","examples":[1234567890]},"properties":{"description":"Additional properties associated with the customer.","type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the customer.","type":"string","examples":["REF-123456"]},"updated_at":{"description":"The timestamp indicating when the customer was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{},"wallet_address":{"description":"The wallet address associated with the customer.","type":"string","examples":[4.059726770363619e+44]}}},"customer_id":{"description":"The ID of the customer associated with the payment.","type":"string","examples":["customer123"]},"id":{"description":"The unique identifier of the payment.","type":"string","examples":["payment123"]},"invoice_id":{"description":"The ID of the invoice associated with the payment.","type":"string","examples":["invoice123"]},"next_action":{"description":"The next action related to the payment.","type":"string","examples":["verify_payment"]},"org_id":{"description":"The ID of the organization associated with the payment.","type":"string","examples":["org123"]},"parent_id":{"description":"The ID of the parent payment if this payment is a part of a larger transaction.","type":"string","examples":["parent_payment123"]},"payment_link":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}},"payment_method":{"description":"Details of the payment method used for the payment.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"properties":{"description":"Additional properties associated with the payment.","type":"object","additionalProperties":true},"scheduled_time":{"description":"The scheduled time for the payment.","type":"integer","examples":[1643712000]},"source":{"description":"Details of the billing source associated with the payment.\n\n`1` `2` `3` `4`","type":"integer","enum":[1,2,3,4],"x-enum-varnames":["BillingSourceLago","BillingSourceBoomfi","BillingSourceStripe","BillingSourceChargebee"]},"status":{"description":"The status of the payment.\n\n`1` `2` `3` `4` `5` `6` `7` `8`","type":"integer","enum":[1,2,3,4,5,6,7,8],"x-enum-varnames":["PaymentStatusUnknown","PaymentStatusRequirespaymentmethod","PaymentStatusRequiresconfirmation","PaymentStatusRequiresaction","PaymentStatusProcessing","PaymentStatusSucceeded","PaymentStatusCanceled","PaymentStatusFailed"]},"updated_at":{"description":"The timestamp indicating when the payment was last updated.","type":"string"},"v1":{"description":"v1","type":"array","items":{"type":"integer"}}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"404":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const GetPlanById = {"metadata":{"allOf":[{"type":"object","properties":{"planId":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The unique identifier of the plan."}},"required":["planId"]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier of the plan.","examples":["2eJh1L1rDrCZxTyE6vwGhck7LWI"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the plan.","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan."},"name":{"type":"string","description":"The name of the plan.\n\n`1` `2` `3`","enum":["1","2","3"],"x-enum-varnames":["PlanTypeUnknown","PlanTypeOnetime","PlanTypeRecurring"]},"type":{"type":"string","description":"The type of the plan."},"billing_scheme":{"type":"string","description":"The billing scheme of the plan."},"price":{"type":"string","description":"The price of the plan."},"currency":{"type":"string","description":"The currency of the plan."},"available_quantity":{"type":"integer","description":"The available quantity of the plan."},"trial_period":{"type":"string","description":"The trial period of the plan."},"recurring_interval":{"type":"string","description":"The recurring interval of the plan.\n\n`Week` `Month` `Year`","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"recurring_interval_count":{"type":"integer","description":"The count of recurring intervals for the plan."},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan."},"reference":{"type":"string","description":"The reference of the plan."},"enabled":{"type":"boolean","description":"Indicates whether the plan is enabled or not."},"v1":{"type":"string","description":"Additional information about the plan."},"created_by":{"type":"string","description":"The identifier of the user who created the plan."},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created."},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted, if applicable."},"metadata":{"type":"object","description":"Additional metadata associated with the plan.","additionalProperties":true},"properties":{"type":"object","description":"Additional properties of the plan.","additionalProperties":true}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListAccounts = {"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"id":{"type":"integer","description":"The unique identifier for the account","examples":[307]},"org_id":{"type":"string","description":"The organization ID associated with the account","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"account_type":{"type":"string","description":"The type of account (e.g., Crypto, Card)","examples":["Crypto"]},"name":{"type":"string","description":"The name of the account","examples":["metamask"]},"chain_id":{"type":"integer","description":"The identifier of the blockchain chain associated with the account","examples":[1]},"address":{"type":"string","description":"The address of the account","examples":["0xE1c92E9A0f5f61739289e1CE5825038a68d8e580"]},"currencies":{"type":"array","description":"The list of supported currencies for the account","items":{"type":"string"},"examples":["USDC","USDT","DAI","WETH","ETH"]},"account_number":{"type":"string","description":"The account number (if applicable)","examples":[""]},"sort_code":{"type":"string","description":"The sort code (if applicable)","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the account is enabled","examples":[true]},"created_by":{"type":"string","description":"The ID of the user who created the account","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the account was created","examples":["2023-06-08T13:15:23.307Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the account was last updated","examples":["2023-06-08T13:15:23.307Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the account was deleted (if applicable)"},"chain":{"type":"object","properties":{"code":{"type":"string","description":"The code representing the blockchain chain","examples":["eth-mainnet"]},"name":{"type":"string","description":"The name of the blockchain chain","examples":["Ethereum"]},"category":{"type":"string","description":"The category of the blockchain chain","examples":["Ethereum"]},"is_testnet":{"type":"boolean","description":"Indicates if the blockchain chain is a testnet","examples":[false]},"native_currency_symbol":{"type":"string","description":"The native currency symbol of the blockchain chain","examples":["ETH"]}}}}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListCustomers = {"metadata":{"allOf":[{"type":"object","properties":{"limit":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The number of items to be included in each page of the API response."},"page":{"type":"integer","$schema":"http://json-schema.org/draft-04/schema#","description":"The page number of the results to be retrieved."},"search":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"The search query or keyword that filters the results returned by the API."},"type":{"type":"string","enum":["first-time","repeat"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Specifies a type or category for filtering the results."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"created_at":{"type":"string","description":"The timestamp indicating when the customer record was created.","examples":["2023-03-15T08:30:00Z"]},"customer_ident":{"type":"string","description":"The unique identifier for the customer.","examples":["CUST123"]},"email":{"type":"string","description":"The email address associated with the customer.","examples":["example@email.com"]},"guest":{"type":"boolean","description":"Indicates whether the customer is a guest (true) or not (false).","examples":[false]},"id":{"type":"string","description":"The unique identifier for the customer.","examples":["123456789"]},"is_deleted":{"type":"boolean","description":"Indicates whether the customer has been deleted (true) or not (false).","examples":[false]},"last_payment_date":{"type":"string","description":"The timestamp indicating the date of the last payment made by the customer.","examples":["2023-03-20T12:00:00Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the customer.","additionalProperties":true},"name":{"type":"string","description":"The name of the customer.","examples":["John Doe"]},"organisation_id":{"type":"string","description":"The identifier of the organization to which the customer belongs.","examples":["ORG123"]},"payments_count":{"type":"integer","description":"The total count of payments made by the customer.","examples":[5]},"phone":{"type":"string","description":"The phone number associated with the customer.","examples":[1234567890]},"properties":{"type":"object","description":"Additional custom properties associated with the customer.","additionalProperties":true},"updated_at":{"type":"string","description":"The timestamp indicating when the customer record was last updated.","examples":["2023-03-25T10:45:00Z"]},"wallet_address":{"type":"string","description":"The wallet address associated with the customer for cryptocurrency transactions.","examples":["0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520"]}}}},"last_update":{"type":"string","description":"The timestamp indicating when the data was last updated.","examples":["2021-01-01T00:00:00Z"]},"next":{"type":"integer","description":"The index indicating the next page of items.","examples":[10]},"total":{"type":"integer","description":"The total number of items across all pages.","examples":[10]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListEventsForOrganization = {"metadata":{"allOf":[{"type":"object","properties":{"after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters events to include only those that occurred after the specified timestamp."},"before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters events to include only those that occurred before the specified timestamp."},"limit":{"type":"integer","minimum":1,"maximum":100,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specifies the maximum number of events to be included in the API response."},"page":{"type":"integer","minimum":1,"$schema":"http://json-schema.org/draft-04/schema#","description":"Indicates the page number of the results to be retrieved."},"since":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters events to include only those that occurred on or after the specified timestamp."},"sort":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Specifies the sorting order for the returned events."},"until":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters events to include only those that occurred on or before the specified timestamp."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"type":{"type":"string","description":"The type or category of the event."},"action":{"type":"string","description":"The action associated with the event."},"data":{"type":"object","additionalProperties":true,"description":"Additional data associated with the event."},"id":{"type":"string","description":"The unique identifier of the event."},"timestamp":{"type":"string","description":"The timestamp indicating when the event occurred."}}}},"last_update":{"type":"string","description":"The timestamp indicating when the data was last updated."},"next":{"type":"integer","description":"The index indicating the next page of items."},"total":{"type":"integer","description":"The total number of items across all pages."}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPaylinks = {"metadata":{"allOf":[{"type":"object","properties":{"after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Return paylinks after this cursor for pagination."},"before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Return paylinks before this cursor for pagination."},"limit":{"type":"integer","minimum":1,"maximum":100,"$schema":"http://json-schema.org/draft-04/schema#","description":"The maximum number of paylinks to return per page (1-100)."},"page":{"type":"integer","minimum":1,"$schema":"http://json-schema.org/draft-04/schema#","description":"The page number of the results to return."},"since":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Return paylinks created or updated since this timestamp."},"sort":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Sort order for the results."},"until":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Return paylinks created or updated until this timestamp."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}}},"last_update":{"type":"string","description":"The timestamp indicating when the data was last updated.","examples":["2021-01-01T00:00:00Z"]},"next":{"type":"integer","description":"The index of the next page of paylinks.","examples":[10]},"total":{"type":"integer","description":"The total number of paylinks available.","examples":[10]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPayments = {"metadata":{"allOf":[{"type":"object","properties":{"customer_id":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve a list of payments from a particular customer."},"after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve payments after this timestamp."},"before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve payments before this timestamp."},"limit":{"type":"integer","minimum":1,"maximum":100,"$schema":"http://json-schema.org/draft-04/schema#","description":"The maximum number of payments to retrieve (default=100, maximum=100)."},"page":{"type":"integer","minimum":1,"$schema":"http://json-schema.org/draft-04/schema#","description":"The page number of results to retrieve."},"since":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve payments since this timestamp."},"sort":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Sort order for payments (asc=ascending, desc=descending)."},"until":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve payments until this timestamp."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"amount":{"description":"The amount associated with the payment.","type":"string","examples":["100.00"]},"created_at":{"description":"The timestamp indicating when the payment was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"crypto_transaction":{"type":"object","properties":{"chain_id":{"description":"The unique identifier representing a blockchain network or chain.","type":"integer","examples":[1]},"created_at":{"description":"The timestamp indicating when the crypto transaction was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"id":{"description":"The unique identifier of the crypto transaction.","type":"integer"},"payment_id":{"description":"The ID of the payment associated with the crypto transaction.","type":"object","properties":{"string":{"type":"string"},"valid":{"description":"Valid is true if String is not NULL","type":"boolean"}}},"raw":{"description":"Additional raw data associated with the crypto transaction.","type":"array","items":{"type":"integer"}},"sequence":{"description":"The sequence number of the crypto transaction.","type":"string","examples":["123456789"]},"source":{"description":"Details of the source of the crypto transaction.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"status":{"description":"The status of the crypto transaction.\n\n`1` `2` `3`","type":"integer","enum":[1,2,3],"x-enum-varnames":["TransactionStatusPending","TransactionStatusSuccess","TransactionStatusFailed"]},"transaction_hash":{"description":"The transaction hash of the crypto transaction.","type":"string","examples":["0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef"]},"type":{"description":"The type of the crypto transaction.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10],"x-enum-varnames":["TransactionTypeUnknown","TransactionTypeApproval","TransactionTypeDeposit","TransactionTypeWithdraw","TransactionTypePayment","TransactionTypeRefund","TransactionTypeSubscribe","TransactionTypeUnsubscribe","TransactionTypeInternal","TransactionTypeSwap"]},"updated_at":{"description":"The timestamp indicating when the crypto transaction was last updated.","type":"string","examples":["2023-01-01T12:30:00Z"]}}},"currency":{"description":"The currency of the payment.","type":"string","examples":["USD"]},"customer":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the customer was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"deleted_at":{"description":"The timestamp indicating when the customer was deleted, if applicable.","type":"string","examples":["2023-01-05T10:00:00Z"]},"email":{"description":"The email address of the customer.","type":"string","examples":["customer@example.com"]},"id":{"description":"The unique identifier of the customer.","type":"string","examples":["customer123"]},"metadata":{"type":"object","additionalProperties":true},"name":{"description":"The name of the customer.","type":"string","examples":["John Doe"]},"org_id":{"description":"The identifier representing the organization associated with the customer.","type":"string","examples":["org123"]},"phone":{"description":"The phone number of the customer.","type":"string","examples":[1234567890]},"properties":{"description":"Additional properties associated with the customer.","type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the customer.","type":"string","examples":["REF-123456"]},"updated_at":{"description":"The timestamp indicating when the customer was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{},"wallet_address":{"description":"The wallet address associated with the customer.","type":"string","examples":[4.059726770363619e+44]}}},"customer_id":{"description":"The ID of the customer associated with the payment.","type":"string","examples":["customer123"]},"id":{"description":"The unique identifier of the payment.","type":"string","examples":["payment123"]},"invoice_id":{"description":"The ID of the invoice associated with the payment.","type":"string","examples":["invoice123"]},"next_action":{"description":"The next action related to the payment.","type":"string","examples":["verify_payment"]},"org_id":{"description":"The ID of the organization associated with the payment.","type":"string","examples":["org123"]},"parent_id":{"description":"The ID of the parent payment if this payment is a part of a larger transaction.","type":"string","examples":["parent_payment123"]},"payment_link":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for the paylink","examples":["2Z4zsnmp37AF3WKM6N2j4wmeakr"]},"plan_id":{"type":"string","description":"The ID of the associated plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"invoice_id":{"type":"string","description":"The ID of the associated invoice","examples":[""]},"source":{"type":"string","description":"The source of the paylink","examples":["BoomFi"]},"customer_ident_collection":{"type":"boolean","description":"Indicates if customer identification collection is enabled","examples":[false]},"shipping_address_collection":{"type":"boolean","description":"Indicates if shipping address collection is enabled","examples":[false]},"tax_ident_collection":{"type":"boolean","description":"Indicates if tax identification collection is enabled","examples":[false]},"enabled":{"type":"boolean","description":"Indicates if the paylink is enabled","examples":[true]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was deleted","examples":["2023-12-04T13:25:48.499Z"]},"created_by":{"type":"string","description":"The ID of the user who created the paylink","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"updated_by":{"type":"string","description":"The ID of the user who last updated the paylink","examples":[""]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was created","examples":["2023-12-04T13:25:48.496Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the paylink was last updated","examples":["2023-12-04T13:25:48.499Z"]},"metadata":{"type":"object","description":"Additional metadata associated with the paylink","additionalProperties":true},"properties":{"type":"object","description":"Additional properties associated with the paylink","properties":{"short_code":{"type":"string","description":"The short code associated with the paylink","examples":["AANj9Dm7Zl"]}}},"plan":{"type":"object","description":"The details of the associated plan","properties":{"id":{"type":"string","description":"The unique identifier for the plan","examples":["2Z4zspFMhs2pMYjcR3l6JpJaWdA"]},"org_id":{"type":"string","description":"The organization ID associated with the plan","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan","examples":["Lago"]},"name":{"type":"string","description":"The name of the plan","examples":["test paylink 12 04"]},"type":{"type":"string","description":"The type of the plan","examples":["OneTime"]},"billing_scheme":{"type":"string","description":"The billing scheme of the plan","examples":["FlatFee"]},"price":{"type":"string","description":"The price of the plan","examples":["1"]},"currency":{"type":"string","description":"The currency of the plan","examples":["USD"]},"available_quantity":{"type":"integer","description":"The available quantity of the plan","examples":[0]},"trial_period":{"type":"string","description":"The trial period of the plan","examples":[""]},"recurring_interval":{"type":"string","description":"The recurring interval of the plan","examples":["Unknown"]},"recurring_interval_count":{"type":"integer","description":"The recurring interval count of the plan","examples":[1]},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan","examples":["Unknown"]},"reference":{"type":"string","description":"The reference of the plan","examples":[""]},"enabled":{"type":"boolean","description":"Indicates if the plan is enabled","examples":[true]},"v1":{"type":"string","description":"Additional information about the plan","examples":["eyJwbGFucyI6IHsiaWQiOiAiYWE1ZmI5MjQtMmMzZi00NzcwLTkyZDEtMjFjYmY3ODc3ODc2IiwgIm5hbWUiOiAidGVzdCBwYXlsaW5rIDEyIDA0IiwgInN0YXR1cyI6ICJhY3RpdmUiLCAiaW50ZXJ2YWwiOiBudWxsLCAicmVmZXJlbmNlIjogIiIsICJhbW91bnRfd2VpIjogIjEwMCIsICJjcmVhdGVkX2F0IjogIjIwMjMtMTI..."]},"created_by":{"type":"string","description":"The ID of the user who created the plan","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created","examples":["2023-12-04T13:25:47.656Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated","examples":["2023-12-04T13:25:48.491Z"]},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted"},"metadata":{"type":"object","description":"Additional metadata associated with the plan","additionalProperties":true}}}}},"payment_method":{"description":"Details of the payment method used for the payment.\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"properties":{"description":"Additional properties associated with the payment.","type":"object","additionalProperties":true},"scheduled_time":{"description":"The scheduled time for the payment.","type":"integer","examples":[1643712000]},"source":{"description":"Details of the billing source associated with the payment.\n\n`1` `2` `3` `4`","type":"integer","enum":[1,2,3,4],"x-enum-varnames":["BillingSourceLago","BillingSourceBoomfi","BillingSourceStripe","BillingSourceChargebee"]},"status":{"description":"The status of the payment.\n\n`1` `2` `3` `4` `5` `6` `7` `8`","type":"integer","enum":[1,2,3,4,5,6,7,8],"x-enum-varnames":["PaymentStatusUnknown","PaymentStatusRequirespaymentmethod","PaymentStatusRequiresconfirmation","PaymentStatusRequiresaction","PaymentStatusProcessing","PaymentStatusSucceeded","PaymentStatusCanceled","PaymentStatusFailed"]},"updated_at":{"description":"The timestamp indicating when the payment was last updated.","type":"string"},"v1":{"description":"v1","type":"array","items":{"type":"integer"}}}}},"last_update":{"type":"string","description":"The timestamp indicating the last update time.","examples":["2021-01-01T00:00:00Z"]},"next":{"type":"integer","description":"The number of the next page of results.","examples":[10]},"total":{"type":"integer","description":"The total number of items in the response.","examples":[10]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListPlans = {"metadata":{"allOf":[{"type":"object","properties":{"after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters plans to include only those created after the specified timestamp."},"before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters plans to include only those created before the specified timestamp."},"limit":{"type":"integer","minimum":1,"maximum":100,"$schema":"http://json-schema.org/draft-04/schema#","description":"Specifies the maximum number of plans to be included in the API response."},"page":{"type":"integer","minimum":1,"$schema":"http://json-schema.org/draft-04/schema#","description":"Indicates the page number of the results to be retrieved."},"since":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters plans to include only those created on or after the specified timestamp."},"sort":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Specifies the sorting order for the returned plans."},"until":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Filters plans to include only those created on or before the specified timestamp."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier of the plan.","examples":["2eJh1L1rDrCZxTyE6vwGhck7LWI"]},"org_id":{"type":"string","description":"The identifier of the organization associated with the plan.","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"source":{"type":"string","description":"The source of the plan."},"name":{"type":"string","description":"The name of the plan.\n\n`1` `2` `3`","enum":["1","2","3"],"x-enum-varnames":["PlanTypeUnknown","PlanTypeOnetime","PlanTypeRecurring"]},"type":{"type":"string","description":"The type of the plan."},"billing_scheme":{"type":"string","description":"The billing scheme of the plan."},"price":{"type":"string","description":"The price of the plan."},"currency":{"type":"string","description":"The currency of the plan."},"available_quantity":{"type":"integer","description":"The available quantity of the plan."},"trial_period":{"type":"string","description":"The trial period of the plan."},"recurring_interval":{"type":"string","description":"The recurring interval of the plan.\n\n`Week` `Month` `Year`","enum":["Week","Month","Year"],"x-enum-varnames":["RecurringIntervalWeek","RecurringIntervalMonth","RecurringIntervalYear"]},"recurring_interval_count":{"type":"integer","description":"The count of recurring intervals for the plan."},"recurring_usage_type":{"type":"string","description":"The recurring usage type of the plan."},"reference":{"type":"string","description":"The reference of the plan."},"enabled":{"type":"boolean","description":"Indicates whether the plan is enabled or not."},"v1":{"type":"string","description":"Additional information about the plan."},"created_by":{"type":"string","description":"The identifier of the user who created the plan."},"created_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was created."},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was last updated."},"deleted_at":{"type":"string","format":"date-time","description":"The timestamp when the plan was deleted, if applicable."},"metadata":{"type":"object","description":"Additional metadata associated with the plan.","additionalProperties":true},"properties":{"type":"object","description":"Additional properties of the plan.","additionalProperties":true}}}},"last_update":{"type":"string","examples":["2021-01-01T00:00:00Z"]},"next":{"type":"integer","examples":[10]},"total":{"type":"integer","examples":[10]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const ListSubscriptions = {"metadata":{"allOf":[{"type":"object","properties":{"customer_id":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve a list of subscriptions for a particular customer."},"status":{"type":"string","enum":["Pending","Active","Canceled","InTrial"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve subscriptions based on their respective status."},"after":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve subscriptions after this timestamp."},"before":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve subscriptions before this timestamp."},"limit":{"type":"integer","minimum":1,"maximum":100,"$schema":"http://json-schema.org/draft-04/schema#","description":"Maximum number of subscriptions to retrieve per page (default=100)."},"page":{"type":"integer","minimum":1,"$schema":"http://json-schema.org/draft-04/schema#","description":"Page number of the results to retrieve (default=1)."},"since":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve subscriptions since this timestamp."},"sort":{"type":"string","enum":["asc","desc"],"$schema":"http://json-schema.org/draft-04/schema#","description":"Sort order for the retrieved subscriptions (ascending or descending)."},"until":{"type":"string","$schema":"http://json-schema.org/draft-04/schema#","description":"Retrieve subscriptions until this timestamp."}},"required":[]}]},"response":{"200":{"type":"object","properties":{"data":{"type":"object","properties":{"items":{"type":"array","items":{"type":"object","properties":{"cancel_at_period_end":{"description":"Indicates whether the subscription will be canceled at the end of the current period.","type":"boolean","examples":[false]},"created_at":{"description":"The timestamp indicating when the subscription was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"currency":{"description":"The currency of the subscription.","type":"string","examples":["USD"]},"customer":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the customer was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"deleted_at":{"description":"The timestamp indicating when the customer was deleted, if applicable.","type":"string","examples":["2023-01-05T10:00:00Z"]},"email":{"description":"The email address of the customer.","type":"string","examples":["customer@example.com"]},"id":{"description":"The unique identifier of the customer.","type":"string","examples":["customer123"]},"metadata":{"type":"object","additionalProperties":true},"name":{"description":"The name of the customer.","type":"string","examples":["John Doe"]},"org_id":{"description":"The identifier representing the organization associated with the customer.","type":"string","examples":["org123"]},"phone":{"description":"The phone number of the customer.","type":"string","examples":[1234567890]},"properties":{"description":"Additional properties associated with the customer.","type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the customer.","type":"string","examples":["REF-123456"]},"updated_at":{"description":"The timestamp indicating when the customer was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{},"wallet_address":{"description":"The wallet address associated with the customer.","type":"string","examples":[4.059726770363619e+44]}}},"customer_id":{"description":"The unique identifier of the customer associated with the subscription.","type":"string","examples":["customer123"]},"id":{"description":"The unique identifier of the subscription.","type":"string","examples":["sub123"]},"items":{"type":"array","description":"List of subscription items included in the subscription.","items":{"type":"object","properties":{"created_at":{"description":"The timestamp indicating when the subscription item was created.","type":"string","examples":["2023-01-01T12:00:00Z"]},"id":{"description":"The unique identifier of the subscription item.","type":"string","examples":["item123"]},"plan_id":{"description":"The unique identifier of the plan associated with the subscription item.","type":"string","examples":["plan456"]},"properties":{"type":"object","additionalProperties":true},"subscription_id":{"description":"The unique identifier of the subscription associated with the subscription item.","type":"string","examples":["sub123"]},"updated_at":{"description":"The timestamp indicating when the subscription item was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]}}}},"metadata":{"description":"Additional metadata associated with the subscription.","type":"array","items":{"type":"integer"}},"org_id":{"description":"The identifier representing the organization associated with the subscription.","type":"string","examples":["org123"]},"payment_method":{"description":"payment_method\n\n`1` `2` `3` `4` `5` `6` `7` `8` `9` `10` `11`","type":"integer","enum":[1,2,3,4,5,6,7,8,9,10,11],"x-enum-varnames":["PaymentMethodUnknown","PaymentMethodMerchantcontract","PaymentMethodProxywallet","PaymentMethodUnblock","PaymentMethodCard","PaymentMethodGooglepay","PaymentMethodApplepay","PaymentMethodPaypal","PaymentMethodDirectdebit","PaymentMethodRamp","PaymentMethodRampcryptosettlement"]},"properties":{"type":"object","additionalProperties":true},"reference":{"description":"The reference associated with the subscription.","type":"string","examples":["REF-123456"]},"source":{"description":"The source of the subscription.\n\n`1` `2` `3` `4`","type":"integer","enum":[1,2,3,4],"x-enum-varnames":["BillingSourceLago","BillingSourceBoomfi","BillingSourceStripe","BillingSourceChargebee"]},"start_at":{"description":"The timestamp indicating when the subscription starts.","type":"string","examples":["2023-01-05T10:00:00Z"]},"status":{"description":"The status of the subscription.\n\n`1` `2` `3` `4` `5` `6` `7` `8`","type":"integer","enum":[1,2,3,4,5,6,7,8],"x-enum-varnames":["SubscriptionStatusUnknown","SubscriptionStatusPending","SubscriptionStatusFuture","SubscriptionStatusIntrial","SubscriptionStatusActive","SubscriptionStatusPaused","SubscriptionStatusExpired","SubscriptionStatusCanceled"]},"updated_at":{"description":"The timestamp indicating when the subscription was last updated.","type":"string","examples":["2023-01-02T09:00:00Z"]},"v1":{"description":"v1","type":"array","items":{"type":"integer"}}}}},"last_update":{"type":"string","description":"Timestamp of the last update in the subscription list.","examples":["2021-01-01T00:00:00Z"]},"next":{"type":"integer","description":"Index of the next page of subscriptions.","examples":[10]},"total":{"type":"integer","description":"Total number of subscriptions in the system.","examples":[10]}}},"error":{"type":"boolean"}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
const UpdateOrganization = {"body":{"type":"object","required":["logo_url","name","webhook_url"],"properties":{"logo_url":{"type":"string","description":"The URL of the organization's logo.","examples":["https://boomfi-test-addonsstack-ipj55n-merchantdatabucket-11rcw286tjikp.s3.eu-west-2.amazonaws.com/7403e69d-71c7-4ab4-8b19-7130ecd0bb3e/merchant-logos/57da50bd-857a-4658-8916-7f4a5f9ad9ad.png"]},"name":{"type":"string","description":"The updated name of the organization.","examples":["BoomFi"]},"webhook_url":{"type":"string","description":"The updated webhook URL for the organization.","examples":["https://webhook.site/b09eec23-3f7a-4f0c-aec6-84c277c5eb78"]}},"$schema":"http://json-schema.org/draft-04/schema#"},"response":{"200":{"type":"object","properties":{"id":{"type":"string","description":"The unique identifier for BoomFi","examples":["2Tpmnmh6GHJXumKN1oBy2u56Ima"]},"name":{"type":"string","description":"The name of the BoomFi service","examples":["BoomFi"]},"owner_user_id":{"type":"string","description":"The user ID of the owner","examples":["2TzGhPCAfFWLPBjtc6h52Aao2S6"]},"webhook_url":{"type":"string","format":"uri","description":"The URL for webhook notifications","examples":["https://webhook.site/b09eec23-3f7a-4f0c-aec6-84c277c5eb78"]},"logo_url":{"type":"string","format":"uri","description":"The URL for the logo of BoomFi","examples":["https://boomfi-test-addonsstack-ipj55n-merchantdatabucket-11rcw286tjikp.s3.eu-west-2.amazonaws.com/7403e69d-71c7-4ab4-8b19-7130ecd0bb3e/merchant-logos/57da50bd-857a-4658-8916-7f4a5f9ad9ad.png"]},"offramp_fee_pct":{"type":"number","description":"The offramp fee percentage","examples":[1]},"payment_fee_pct":{"type":"number","description":"The payment fee percentage","examples":[1]},"swap_fee_pct":{"type":"number","description":"The swap fee percentage","examples":[1]},"credits_usd":{"type":"number","description":"The credits in USD","examples":[0]},"created_at":{"type":"string","format":"date-time","description":"The timestamp when BoomFi was created","examples":["2023-08-11T10:09:25.679Z"]},"updated_at":{"type":"string","format":"date-time","description":"The timestamp when BoomFi was last updated","examples":["2024-03-29T13:59:55.003Z"]},"properties":{"type":"object","properties":{"ramp":{"type":"object","properties":{"enabled":{"type":"boolean","description":"Indicates if Ramp is enabled","examples":[true]}}},"spreedly":{"type":"object","properties":{"merchant_profile_id":{"type":"string","description":"The merchant profile ID for Spreedly","examples":["65oxw5ZZ2lE4siMz618v4HQqD2X"]},"sca_authentication_enabled":{"type":"boolean","description":"Indicates if SCA authentication is enabled","examples":[true]},"sca_provider_id":{"type":"string","description":"The SCA provider ID for Spreedly","examples":["YN8LHxRK9ysWlKfdWZdDCtUM2TI"]},"sub_merchant_data":{"type":"string","description":"Sub-merchant data for Spreedly","examples":["eyJ0b2tlbiI6Ik5zVkUyV1E0eWZmUklBaDRSMENzalRXYU5naSIsIm5hbWUiOiJDcmV3IiwiZW52aXJvbm1lbnRfa2V5IjoiM0I1TkFGWTlBTTkyODlGWDZROTVOM1g4RFciLCJtZXJjaGFudF9kZWZpbmVkX3VpZCI6IjJUcG1ubWg2R0hKWHVtS04xb0J5MnU1NkltYSIsImFkZHJlc3MiOnsiYWRkcmVzczEiOiIiLCJjaXR5IjoiIiwic3RhdGUiOiIiLCJ6aXAiOiIiLCJjb3VudHJ5IjoiIn0sIm1ldGFkYXRhIjpudWxsLCJjcmVhdGVkX2F0IjoiMjAyNC0wMi0xNlQxNDo0OToyM1oiLCJ1cGRhdGVkX2F0IjoiMjAyNC0wMi0xNlQxNDo0OToyM1oifQ=="]},"sub_merchant_id":{"type":"string","description":"The sub-merchant ID for Spreedly","examples":["NsVE2WQ4yffRIAh4R0CsjTWaNgi"]}}}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"400":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"401":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 400","type":"integer","examples":[400]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: InsufficientQuantity","type":"string","examples":["InsufficientQuantity"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Insufficient quantity","type":"string","examples":["Insufficient quantity"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"},"500":{"type":"object","properties":{"error":{"type":"object","properties":{"code":{"description":"The error code returned by the server.\nExample: 500","type":"integer","examples":[500]},"errors":{"description":"A list of detailed error objects.","type":"array","items":{"type":"object","properties":{"domain":{"description":"The domain associated with the error.\nExample: orders","type":"string","examples":["orders"]},"reason":{"description":"The reason for the error.\nExample: Internal","type":"string","examples":["Internal"]}}}},"message":{"description":"A descriptive message explaining the error.\nExample: Internal server error","type":"string","examples":["Internal server error"]}}}},"$schema":"http://json-schema.org/draft-04/schema#"}}} as const
;
export { CancelSubscription, CreateCustomer, CreatePaymentLink, CreatePlan, CreateVariantPaylinkUrl, CreateWebhook, DeleteCustomer, DisableIntegration, EnableDisablePaylink, EnableIntegration, GetCustomerById, GetIntegrationTemplates, GetIntegrations, GetOrganization, GetPaymentById, GetPlanById, ListAccounts, ListCustomers, ListEventsForOrganization, ListPaylinks, ListPayments, ListPlans, ListSubscriptions, UpdateOrganization }
